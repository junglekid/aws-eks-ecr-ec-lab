apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: color
  name: color
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: color
  labels:
    app: color
  namespace: color
spec:
  replicas: 4
  selector:
    matchLabels:
      app: color
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: color
    spec:
      containers:
      - name: color
        image: 704855531002.dkr.ecr.us-west-2.amazonaws.com/dallin-ecr-ec-lab:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
        envFrom:
        - configMapRef:
            name: color
        - secretRef:
            name: color
        resources:
            requests:
              cpu: 0.25
              memory: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: color
  labels:
    app: color
  namespace: color
data:
  # property-like keys; each key maps to a simple value
  REDIS_HOST: "clustercfg.dallin-ec-redis-cluster.dwkzlo.usw2.cache.amazonaws.com"
  REDIS_PORT: "6379"
  REDIS_USER: "redis-svc"
  SESSION_EXPIRATION: "30"
---
apiVersion: v1
kind: Secret
metadata:
  name: color
  namespace: color
data:
  REDIS_PASSWORD: aFlhWzBDU194OnMySjw5XUlZSzwxMEZ6K1ZNSGRucjM=
  SECRET_KEY: bkVQanRsWE94Njk0bFMybTdwZlBhWXk3VlA1Y0gxM1I=
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: color
  namespace: color
spec:
  type: ClusterIP
  selector:
    app: color
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: color
  namespace: color
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:704855531002:certificate/9b4ab66c-1f1f-4f60-ac86-7cf5a2e57b60
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/target-type: ip
    external-dns.alpha.kubernetes.io/hostname: dallin-ecr-ec-lab.bsisandbox.com
spec:
  ingressClassName: alb
  rules:
  # - host: dallin-ecr-ec-lab.bsisandbox.com
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: color
            port:
              number: 80
